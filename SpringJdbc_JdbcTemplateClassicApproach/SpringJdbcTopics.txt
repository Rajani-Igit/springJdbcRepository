
Types of SpringJDBC:-
---------------------

	1)JDBCTemplate
	2)NamedParameter JDBC Template
	3)SimpleJDBC Template
	4)Simple JDBC call or JDBC insert
	5)Mapping Sql Operation as subclass

Difference between JPA(ORM Technologies) and Spring JDBC :-
-----------------------------------------------------------

	1)If Large volume of Data(SpringJdbc)
	2)If we are not migrating from one databases to another we should not use Spring ORM

Differencs between JDBC and Spring JDBC :-
------------------------------------------

	1)Bioler Plate Code
	2)Checked exceptions are replaced with SpringUnchecked exceptions(Exception Wrapping)
	3)JDBC will allow only Local Transactions.Spring JDBC will allow global Transactions
	4)only positional parameters are apllicable but incase of SpringJdbc it will support Named Parameters
	5)Resource Closing 
	6)It will follw Template Method Design pattern so we can migrate from one technology another technology very easily with minimal changes

when we should go for SpringJdbc over JPA or JavaJDBC?
	-->In order to answer this question we have to know types of applications existed.based on the requirement and utilizations network traffic of the application
	we should choose the technologies. its not like for every thing we can use JPA Technologies.There are areas we should not use JPA Technologies also

Three types of applications are there :-
---------------------------------------
1 stand-alone application/Desktop Applications :-No of users are very less
2 enterprise application
     this is divided into 2 parts
        1- distributed application solution
                          
           1) web application solutions
 
             this is divide into two parts(customer to business(c2b) and business to business(b2b)
                1) c2b ------>
                      i) personalized application solution
                           example -->  website made by considering single user like facebook. after login you will get your related information 
                
                       ii)  group of customer centric application solution
                            example ---> flipkart, amazon are the websites use by group of people 
                2) b2b ------>
                      i) partnarship related application solution
                          example --> big bazar and payback
                     
                      ii) internal use related applications
                           example ---> distributor and provider

           2)- integration application solutions
                         example ---> integraion with web services

3 Batch processing application
     if volume of data we want to store at a time we go for batch processing programming using pl-sql it will possible



Difference between orm and spring jdbc :-
-----------------------------------------

   ##-- if you have to fetch large volume of data then you should go for spring jdbc instead of any oram framework like jpa, hibernate.
        beacuse orm framework fetch the all data with its assosiation.data in the form of object and directly dump into java application 
        which is performance problem for large application in such case we should go for spring jdbc instead of orm framework.


## Difference between internet and intra net :-

Internet
---------

1. Internet is wide network of computers and is open for all.
2. Internet itself contains a large number of intranets.
3. The number of users who use internet is Unlimited.
4. The Visitors traffic is unlimited.
5. Internet contains different source of information and is available for all.

Intranet
---------

1. Intranet is also a network of computers designed for a specific group of users.
2. Intranet can be accessed from Internet but with restrictions.
3. The number of users is limited.
4. The traffic allowed is also limited.
5. Intranet contains only specific group information.

	Therefore the Internet is an open, public space, while an intranet is designed to be a private space. 
	An intranet may be accessible from the Internet, but it is protected by a password and accessible only to authorized users.
	
	Two Approaches to Implement JDBCTemplate class
	1)Classic Approach
	2)Query Based Approach
	
	1)Classic Approch :-
	
		  i)CallBackMechanism / executor Approach
	      ii)Two phase execution / Two Codemodules
	        a)creator
	        b)callback	 

Types of Operations :-

DDL  :-
DCL  :-
DTL  :-
DQL  :-
DML  :-

   ##-->Out of this languages we will use only DQL ,DML .Bcz Data Model will be prepaired before start of devlopment of application.For that Data Model 
   they will create users and will give you those credentials
   ##-->Those credentials will not have any acess permissions,means we can not create table we can not grant permissions and we can not rollback once we commited
   ##-->For each and every class we will have Two Approaches 
   1)Classic
   2)Query
   
   1)Classic
   ##-->For each approach we will be working on DQL(select query's) and DML(insert ,update ,delete) operations.
   
   Difference Between Statement and PreparedStatement  :-
   
   ##-->Both Objects are used to Execute the Querys
     1)If use Statement we will face SQLInjections.bcz it will concat to original query
     2)Performence problem bcz for each and request it will compile
     
     ##-->If the query is dynamic we must and should use PreparedStatement
     If the Query is Static we have to think weather we should use Statement or PreparedStatement
     
     ##-->If you are building dynamic query by using statement object one can not understand what is query and what is substitute values bcz we are writing by using concantination
   
     ##-->All the Over riding methods of execute(creator ,callback)

  2)Query
  
  ##-->jdbcTemplate.queryForInt()   --> It is only For Int and It was Deprecated
  ##-->jdbcTemplate.queryForObject()--> It is for returning one column of one record(For All Primitives like String ,Long ,..) 
  ##-->jdbcTemplate.queryForObject()--> With RowMapper Impl Class using this we can fetch one record of data
  ##-->jdbcTemplate.query()         --> Used to fetch List of records of data from RowMapper as well as ResultSetExtractor
  
  ## -->By Using RowMapper and ResultSetExtractor we can fetch Group of records of data. But the difference is execution control will not available
   in RowMapper class bcz it will internally implemented in such a way by JDBCTEMPLATE class
   
 2)NamedParameterJdbcTemplate
 
 ## This is another way of performing persistance logic. What ever the Operation we can have by using JDBCTEMPLATE the same will be performed by using 
 NamedParameterJdbcTemplate class.Here one change is that We have to pass NamedPaameters insted of positional Parameters.In order to avoid the kayas
 (Confussion) using positional parameters happylu we can use Named Parameters
 
## By using this we can perform select a Group or single record or single record of a column and update ,insert ,delete operations we can perform
## We can provide the substitute values by using either of Three ways

  1)Using Map  :- Here we have to pass keys as NamedParameters and values as corresponding type values
  2)SqlParameterSource
	 *    -->It is an interface and contains two implementation classes are there
	 *    1)MapSqlParameterSource
	 *    2)BeanPropertySqlParameterSource
	 
## Using either of three ways we can set Parameters

  1)If you want a single column record of data you can call same method where we used in JdbcTemplate class queryForInt or queryForObject with three parameters
  and third parameter is Map i.e Named Parameter we have to pass
  2)If you want a List of records we have to wrire query and if you want to update ,insert ,delete all these operations we can perform by using 
  update method where we can change only query
  
 3)SimpleJdbcTemplate -2.0 version
 (JdbcTemplate+NamedParameterJdbcTemplate)
 
 ## It is the comination of JdbcTemplate and NamedParameterJdbcTemplate class but it does not mean that we shoul not use both features at t time inside 
 ApplicationDevlopment
 
 ## This class wa Intoduced in 2.5 version of spring release
 
 Spring 2.0    JDK 1.4 supports
 ----------
 
  1) JdbcTemplate
  2) NamedParameterJdbcTemplate

Spring 2.5  JDK 1.4 and JDK 1.5supports(Here Genrics and Concurrent Api are introduced in java )
 -->In previous version releases means in 1.4 these classes are not devlopd based on All These Api s.If they modified all the applications are running on 
 previous versions will not work. so that is the reason they provided one more class called SimpleJdbcTemplate.Later release of Spring 3.0 version
 They provided JDK 1.5 is the minimum version so all the classes are re written according to jdk 1.5 and they removed this class as it is duplicating the 
 Remaing classes

  1) JdbcTemplate
  2)NamedParameterJdbcTemplate
  3)SimpleJdbcTemplate
  
  4)SimpleJdbcInsert / SimpleJdbcCall
  
  ## The names itself are saying these are usefull to perform insert and call operations
  --> Here we are not required to write any querys to perform the operations.these are usefull for perfrming DataBase independent Querys
  -->To perform the the operations we have to provide the Table name or procedure name or column name that you want to retrive the data from and call 
     the execute method by passing Parameter Map or MapSqlParameterSource or BeanPropertySqlParameterSource

  There are 3 ways we can pass these paramters 
	 *  1)Map by declaring parameters names as keys and values as objects
	 *  2)SqlParameterSource
	 *    -->It is an interface and contains two implementation classes are there
	 *    1)MapSqlParameterSource
	 *    2)BeanPropertySqlParameterSource 

-->To use third way BeanAttributes and Table coumn names should be same.Then directly we can send that bean as attribute to its execute method

  5)MappingSqlOperationsAsSubclasses
  
  JDBC Api for Persistance
  
  JDO(Java Data Object) But the traslation of SunMicrosystems to Oracle This Api Documentation Was released.But Oracle People supports JPA(ORM) Technologies
  Over JDBC .But Actually Sun People Are Against to ORM Technology due to drawback of It will not suitable to Large Scale Application Devlpoment
  
  Unfortunately This API is not yet released>But this class is devloped based on This Api only.All SqlQuerys Having Subclasse
  which are child classes of 
  
  It contains two classes
	 * 
	 *   1)SqlUpdate
	 *   
	 *   2)SqlQuery
	 *   
	 *      |-> MappingSqlQuery
	 * 
	 * Second class contain child class These classes are usefull to perform insert ,update ,delete ,querying operations.Here we have to write a class
	 * that extends from any of the classes.incase of MappingSqlQuery we have to override one method mapRow incase of SqlUpdate you just can call
	 * update() on supre class object so that method is not available inside the super class ,then child class method will be called
   






